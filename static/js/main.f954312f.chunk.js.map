{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","className","name","to","style","cursor","float","color","marginLeft","onClick","bind","email","phone","Contacts","Fragment","key","Header","AddContact","onSubmit","e","preventDefault","newContact","post","history","push","onChangeHandler","target","htmlFor","placeholder","onChange","EditContact","match","params","updContact","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f954312f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {contact.name}{' '}\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className='fa fa-pencil'\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'blue',\r\n                      marginLeft: '1rem',\r\n                    }}\r\n                  />\r\n                </Link>\r\n                <i\r\n                  className='fa fa-sort-down'\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className='fa fa-times'\r\n                  style={{ cursor: 'pointer', color: 'red', float: 'right' }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                />\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>Email: {contact.email}</li>\r\n                  <li className='list-group-item'>Phone: {contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact contact={contact} key={contact.id} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n        <div className='container'>\r\n          <Link to='/' className='navbar-brand'>\r\n            {props.name}\r\n          </Link>\r\n          <div>\r\n            <ul className='navbar-nav mr-auto'>\r\n              <li className='nav-item'>\r\n                <Link to='/' className='nav-link'>\r\n                  <i className='fa fa-home' /> Home\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link to='/contact/add' className='nav-link'>\r\n                  <i className='fa fa-plus' /> Add\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link to='/about' className='nav-link'>\r\n                  <i className='fa fa-question' /> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // Clear Form Inputs\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      className='form-control form-control-lg'\r\n                      placeholder='Enter Name...'\r\n                      value={name}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      className='form-control form-control-lg'\r\n                      placeholder='Enter Email...'\r\n                      value={email}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='phone'>Phone</label>\r\n                    <input\r\n                      type='text'\r\n                      name='phone'\r\n                      className='form-control form-control-lg'\r\n                      placeholder='Enter Phone...'\r\n                      value={phone}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    const { id } = this.props.match.params;\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // Clear Form Inputs\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      className='form-control form-control-lg'\r\n                      placeholder='Update Name...'\r\n                      value={name}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      className='form-control form-control-lg'\r\n                      placeholder='Update Email...'\r\n                      value={email}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='phone'>Phone</label>\r\n                    <input\r\n                      type='text'\r\n                      name='phone'\r\n                      className='form-control form-control-lg'\r\n                      placeholder='Update Phone...'\r\n                      value={phone}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className='lead'>Simple app to manage contacts</p>\r\n      <p className='text-secondary'>Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>\r\n        <span className='text-danger'>404</span> Page Not Found\r\n      </h1>\r\n      <p className='lead'>Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport About from './components/pages/About';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './components/pages/NotFound';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header name='Header Component' />\n          <div className='container'>\n            <Switch>\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/contact/add' component={AddContact} />\n              <Route exact path='/contact/edit/:id' component={EditContact} />\n              <Route exact path='/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}